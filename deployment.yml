apiVersion: apps/v1
kind: Deployment
metadata:
  name: techchallenge
spec:
  replicas: 1
  selector:
    matchLabels:
      app: techchallenge
  template:
    metadata:
      labels:
        app: techchallenge
    spec:
      containers:
        - name: techchallenge
          image: techchallenge:latest
          ports:
            - containerPort: 8080
      restartPolicy: Always

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:
      volumes:
        - name: data-volume-storage
          persistentVolumeClaim:
            claimName: data-volume-claim
      containers:
        - name: postgres
          image: postgres:14-alpine
          ports:
            - containerPort: 5432
          volumeMounts:
            - name: data-volume-storage
              mountPath: /var/lib/postgresql/data
      restartPolicy: Always

---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: data-volume
  labels:
    type: local
spec:
  storageClassName: manual
  capacity:
    storage: 1Gi
  accessModes:
    - ReadWriteOnce
  hostPath:
    path: '.docker/postgres/data'

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: data-volume-claim
spec:
  storageClassName: manual
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi

---
# apiVersion: apps/v1
# kind: StatefulSet
# metadata:
#   name: postgres
# spec:
#   replicas: 1
#   selector:
#     matchLabels:
#       app: postgres
#   template:
#     metadata:
#       labels:
#         app: postgres
#     spec:
#       volumes:
#         - name: data-volume-storage
#           persistentVolumeClaim:
#             claimName: data-volume-claim
#       containers:
#         - name: postgres
#           image: postgres:14-alpine
#           ports:
#             - containerPort: 5432
#           volumeMounts:
#             - name: data-volume-storage
#               mountPath: /var/lib/postgresql/data
#       restartPolicy: Always

---
apiVersion: autoscaling/v1
kind: HorizontalPodAutoscaler
metadata:
  name: techchallenge
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: techchallenge
  minReplicas: 1
  maxReplicas: 10
  targetCPUUtilizationPercentage: 80

---
apiVersion: v1
kind: Service
metadata:
  name: techchallenge
spec:
  type: ClusterIP
  selector:
    app: techchallenge
  ports:
    - port: 80
      targetPort: 8080

---
apiVersion: v1
kind: Service
metadata:
  name: postgres
spec:
  type: ClusterIP
  selector:
    app: postgres
  ports:
    - port: 5432
      targetPort: 5432
