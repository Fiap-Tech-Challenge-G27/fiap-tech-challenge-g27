{
	"info": {
		"_postman_id": "ed750d38-2d51-4ffc-82e4-162474734778",
		"name": "Fiap_TechChallenge_G27",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "25814557"
	},
	"item": [
		{
			"name": "Create categories",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const jsonData = pm.response.json();",
							"",
							"if(!jsonData.error){",
							"    const context = pm.environment.name ? pm.environment : pm.collectionVariables;",
							"    context.set(\"_lastCategoryId\", jsonData.id);",
							"    context.set(\"_lastCategorySlug\", jsonData.slug);",
							"}",
							"",
							"pm.test(\"Status code is 201\", function () {",
							"    pm.response.to.have.status(201);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\": \"Drink\",\n    \"slug\": \"drink\",\n    \"description\": \"{{$randomLoremSentence}}\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/categories",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"categories"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get all categories",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/categories",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"categories"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get categories and products by slug",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/categories/:slug",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"categories",
						":slug"
					],
					"variable": [
						{
							"key": "slug",
							"value": "food"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Create products",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const jsonData = pm.response.json();",
							"",
							"if(!jsonData.error){",
							"    const context = pm.environment.name ? pm.environment : pm.collectionVariables;",
							"    context.set(\"_lastProductId\", jsonData.id);",
							"}",
							"",
							"pm.test(\"Status code is 201\", function () {",
							"    pm.response.to.have.status(201);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\": \"{{$randomProductName}}\",\n    \"description\": \"{{$randomProductName}} description\",\n    \"price\": {{$randomPrice}},\n    \"quantity\": {{$randomInt}},\n    \"categoryId\": \"{{_lastCategoryId}}\",\n    \"status\": \"active\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/products",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"products"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get all products",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/products",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"products"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete a product",
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/products/:productId",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"products",
						":productId"
					],
					"variable": [
						{
							"key": "productId",
							"value": "5b9c9a8f-0b24-4e80-91a5-268b6d0035d9"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Create a customer",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const jsonData = pm.response.json();",
							"",
							"if(!jsonData.error){",
							"    const context = pm.environment.name ? pm.environment : pm.collectionVariables;",
							"    context.set(\"_lastCustomerId\", jsonData.id);",
							"    context.set(\"_lastCustomerCpf\", jsonData.cpf);",
							"}",
							"",
							"pm.test(\"Status code is 201\", function () {",
							"    pm.response.to.have.status(201);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\": \"{{$randomFullName}}\",\n    \"email\": \"{{$randomEmail}}\",\n    \"cpf\": \"{{$randomInt}}{{$randomInt}}\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/customers",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"customers"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get all customers",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/customers",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"customers"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create a order",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const jsonData = pm.response.json();",
							"",
							"if(!jsonData.error){",
							"    const context = pm.environment.name ? pm.environment : pm.collectionVariables;",
							"    context.set(\"_lastCustomerId\", jsonData.id);",
							"}",
							"",
							"pm.test(\"Status code is 201\", function () {",
							"    pm.response.to.have.status(201);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"customer_cpf\": \"{{_lastCustomerCpf}}\",\n    \"product_id_amount_id\": {\n        \"{{_lastProductId}}\": 2\n    }\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/orders",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"orders"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create a order Copy",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const jsonData = pm.response.json();",
							"",
							"if(!jsonData.error){",
							"    const context = pm.environment.name ? pm.environment : pm.collectionVariables;",
							"    context.set(\"_lastCustomerId\", jsonData.id);",
							"}",
							"",
							"pm.test(\"Status code is 201\", function () {",
							"    pm.response.to.have.status(201);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/orders",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"orders"
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "http://localhost:3000",
			"type": "string"
		},
		{
			"key": "_lastCategoryID",
			"value": ""
		},
		{
			"key": "_lastCustomerId",
			"value": ""
		},
		{
			"key": "_lastCustomerCpf",
			"value": ""
		},
		{
			"key": "_lastProductId",
			"value": ""
		},
		{
			"key": "_lastCategoryId",
			"value": ""
		},
		{
			"key": "_lastCategorySlug",
			"value": ""
		}
	]
}