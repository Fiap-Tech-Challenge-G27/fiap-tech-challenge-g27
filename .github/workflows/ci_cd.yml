name: Build and Push to ECR and Deploy to EKS

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    env:
      AWS_REGION: ${{ secrets.AWS_REGION }}
      ECR_REGISTRY: 851725345801.dkr.ecr.us-east-1.amazonaws.com
      ECR_REPOSITORY: sistema-de-lanchonete
      VERSION: ${{ github.run_number }}
      EKS_CLUSTER_NAME: techchallenge

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_KEY }}
          aws-region: us-east-1

      - name: Login to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v1
        with:
          registries: ${{ secrets.AWS_ACCOUNT_ID }}
          mask-password: "true" # see: https://github.com/aws-actions/amazon-ecr-login#docker-credentials    

      - name: Set Docker buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and Push Docker image
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$GITHUB_RUN_NUMBER .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$GITHUB_RUN_NUMBER
          
      - name: Update kube config
        run: aws eks update-kubeconfig --name $EKS_CLUSTER_NAME --region $AWS_REGION

      - name: Adicionar Helm repo para o Secrets Store CSI Driver
        run: |
          helm repo add secrets-store-csi-driver https://kubernetes-sigs.github.io/secrets-store-csi-driver/charts || true
          helm repo update

      - name: Verificar se o Secrets Store CSI Driver j치 est치 instalado
        id: csi_driver_check
        run: |
          if helm list -n kube-system | grep -q 'csi-secrets-store'; then
            echo "::set-output name=exists::true"
          else
            echo "::set-output name=exists::false"
          fi

      - name: Instalar/Atualizar o Secrets Store CSI Driver
        run: |
          if [ "${{ steps.csi_driver_check.outputs.exists }}" == "true" ]; then
            helm upgrade -n kube-system csi-secrets-store secrets-store-csi-driver/secrets-store-csi-driver
          else
            helm install -n kube-system csi-secrets-store secrets-store-csi-driver/secrets-store-csi-driver
          fi

      - name: Adicionar Helm repo para o AWS Secrets Manager
        run: |
          helm repo add aws-secrets-manager https://aws.github.io/secrets-store-csi-driver-provider-aws || true
          helm repo update

      - name: Verificar se o AWS Secrets Manager provider j치 est치 instalado
        id: aws_provider_check
        run: |
          if helm list -n kube-system | grep -q 'secrets-provider-aws'; then
            echo "::set-output name=exists::true"
          else
            echo "::set-output name=exists::false"
          fi

      - name: Instalar/Atualizar o AWS Secrets Manager provider
        run: |
          if [ "${{ steps.aws_provider_check.outputs.exists }}" == "true" ]; then
            helm upgrade -n kube-system secrets-provider-aws aws-secrets-manager/secrets-store-csi-driver-provider-aws
          else
            helm install -n kube-system secrets-provider-aws aws-secrets-manager/secrets-store-csi-driver-provider-aws
          fi

      - name: Aplicar SecretProviderClass
        run: kubectl apply -f kubernetes/backend/secretproviderclass.yaml
        
      - name: Update deployment.yaml
        run: |
          chmod +x update_deployment.sh
          ./update_deployment.sh $VERSION

      - name: Deploy to AWS EKS
        run: |
          kubectl apply -f kubernetes/backend/backend_deployment.yaml
          kubectl apply -f kubernetes/backend/backend_service.yml